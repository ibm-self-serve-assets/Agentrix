title_name: Supply Chain Automation Agent
short_description: AI-driven system that simulates end-to-end supply chain operations using IBM Watsonx Orchestrate. It leverages autonomous agents to handle key functions such as demand forecasting, inventory management, procurement, logistics, and regulatory compliance. These agents are coordinated by a central orchestration controller to ensure seamless workflow execution. The system is designed for deployment with a FastAPI backend and a React-based frontend, enabling robust performance and a user-friendly interface.
long_description: |
  The Supply Chain Automation Agent is a modular AI system built on IBM watsonx Orchestrate.
  It simulates real-world enterprise supply chain workflows‚Äîranging from demand forecasting 
  and inventory planning to procurement, logistics, and compliance‚Äîby coordinating multiple 
  specialized agents. Each agent leverages domain-specific tools and Granite LLMs to make 
  intelligent, step-wise decisions. A controller agent orchestrates task delegation and 
  response synthesis to streamline end-to-end supply chain operations.

demo_explainer: demo-explainer.md
architecture_diagram: supply-chain-agent.drawio
repository_url: "https://github.com/ibm-self-serve-assets/Agentrix/tree/main/supply-chain-agent" # Leave blank, will be updated after deployment
models_used:
  - watsonx/meta-llama/llama-3-2-90b-vision-instruct
ibm_products:
  - watsonx Orchestrate
  - watsonx.ai
  - IBM Cloud Code Engine
  - IBM Cloud Object Storage
  - IBM Cloud Container Registry
app_url: "https://wxo-supply-chain.1ww65sf49tch.us-south.codeengine.appdomain.cloud"  # Leave blank, will be updated after deployment
backend_url: "https://supply-chain-backend.1ww65sf49tch.us-south.codeengine.appdomain.cloud/docs"
orchestrate_agent: "yes" 
responsive_ui: "yes"
example_prompts:
  - Can you do an end to end planning for the upcoming 4 weeks
  - Forecast sales for SKU001 for the next month
  - We need to restock SKU001 and choose the best vendor.
  - Verify compliance of Supplier A with ESG norms
workflow: "## üöõ Supply Chain Automation Agent \n\nThis project is a modular, AI-powered system that simulates end-to-end supply chain operations using IBM Watsonx Orchestrate. It uses autonomous agents for forecasting, inventory checks, procurement, logistics, and compliance, orchestrated by a central controller. The system can be deployed with a FastAPI backend and React-based frontend.\n\n---\n\n## ‚ú® Key Features\n\n- **üìà Forecast Agent** ‚Äì Predicts demand using Prophet.\n- **üì¶ Inventory Agent** ‚Äì Evaluates stock levels and flags restock needs.\n- **üì• Procurement Agent** ‚Äì Selects vendors and generates procurement plans.\n- **üöö Logistics Agent** ‚Äì Plans delivery based on lead times and urgency.\n- **üìã Compliance Agent** ‚Äì Checks vendor eligibility against policies.\n- **üß† Controller Agent** ‚Äì Orchestrates workflows across all agents.\n\n---\n\n## üß© Architecture & Tech Stack\n\n```\nUser ‚ü∂ Frontend UI (ReactJS(vite))\n     ‚¨áÔ∏è\nFastAPI Backend (Python)\n     ‚¨áÔ∏è\nWatsonx Orchestrate Agent Framework\n     ‚¨áÔ∏è\n+--------------------------+\n| Controller Agent         |\n|  ‚Ü≥ Forecast Agent        |\n|  ‚Ü≥ Inventory Agent       |\n|  ‚Ü≥ Procurement Agent     |\n|  ‚Ü≥ Compliance Agent      |\n|  ‚Ü≥ Logistics Agent       |\n+--------------------------+\n\nTech Stack:\n- Frontend: ReactJS(Vite), Carbon Design System\n- Backend: FastAPI\n- AI: IBM watsonx orchestrate\n- Deployment: IBM Code Engine, IBM Container Registry\n```\n\n## Example Prompt\n\n- Can you do an end to end planning fro the upcoming 4 weeks.\n- Forecast sales for SKU001 for the next month.\n- We need to restock SKU001 and choose the best vendor.\n- Verify compliance of Supplier A with ESG norms."
wxo_agent_name : "controller_agent"
import_script_path: "backend/import-all.sh"
is_customizable: "no"
tile_image_path: "frontend/public/Supply_Chain.jpg"
env:
  - IAM_API_KEY
  - INSTANCE_ID
  - AGENT_ID
  - WXO_INSTANCE_URL
  - VITE_BACKEND_URL
  - VITE_CHATBOT_NAME
  - VITE_WELCOME_MESSAGE
  - VITE_ENABLE_CHAT
  - VITE_APP_NAME

